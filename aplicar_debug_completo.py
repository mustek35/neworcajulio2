#!/usr/bin/env python3
# ========================================================================================
# SCRIPT PRINCIPAL: aplicar_debug_completo.py
# Aplica todos los parches de debug para diagn√≥stico de c√°maras
# ========================================================================================

import os
import sys
from datetime import datetime

def main():
    """Funci√≥n principal para aplicar debug completo"""
    print("üöÄ APLICANDO DEBUG COMPLETO PARA C√ÅMARAS")
    print("=" * 60)
    
    # Verificar que estamos en el directorio correcto
    archivos_requeridos = [
        "ui/main_window.py",
        "gui/visualizador_detector.py", 
        "gui/grilla_widget.py"
    ]
    
    missing_files = [f for f in archivos_requeridos if not os.path.exists(f)]
    if missing_files:
        print(f"‚ùå Error: No se encontraron archivos requeridos:")
        for f in missing_files:
            print(f"   ‚Ä¢ {f}")
        print("\nAseg√∫rate de ejecutar este script desde el directorio ra√≠z del proyecto.")
        return False
    
    success_count = 0
    
    # 1. Aplicar debug mejorado para c√°maras
    print("\nüîß 1. Aplicando debug mejorado para c√°maras...")
    try:
        from debug_camera_enhanced import aplicar_debug_camara
        aplicar_debug_camara()
        success_count += 1
        print("   ‚úÖ Debug de c√°maras aplicado")
    except Exception as e:
        print(f"   ‚ùå Error aplicando debug de c√°maras: {e}")
    
    # 2. Aplicar parche a MainWindow
    print("\nüîß 2. Aplicando parche a MainWindow...")
    try:
        from main_window_rtsp_debug_patch import aplicar_parche_main_window
        if aplicar_parche_main_window():
            success_count += 1
            print("   ‚úÖ MainWindow actualizado")
        else:
            print("   ‚ùå Error aplicando parche a MainWindow")
    except Exception as e:
        print(f"   ‚ùå Error: {e}")
    
    # 3. Verificar archivos creados
    print("\nüîß 3. Verificando archivos de debug...")
    archivos_debug = [
        "rtsp_monitor.py",
        "diagnostico_camaras.py", 
        "debug_camera_enhanced.py",
        "main_window_rtsp_debug_patch.py"
    ]
    
    for archivo in archivos_debug:
        if os.path.exists(archivo):
            print(f"   ‚úÖ {archivo}")
        else:
            print(f"   ‚ö†Ô∏è {archivo} no encontrado")
    
    # 4. Resultados finales
    print("\n" + "=" * 60)
    print("üìä RESUMEN DE APLICACI√ìN:")
    print(f"   ‚úÖ Parches aplicados: {success_count}/2")
    
    if success_count == 2:
        print("\nüéâ DEBUG APLICADO EXITOSAMENTE")
        print("\nüìã PR√ìXIMOS PASOS:")
        print("   1. Reinicia la aplicaci√≥n principal")
        print("   2. Ve al men√∫ 'üîç Debug' para nuevas opciones")
        print("   3. Usa 'Probar Todas las C√°maras' para test r√°pido")
        print("   4. Usa 'Monitor RTSP en Vivo' para monitoreo continuo")
        print("   5. Revisa la consola para mensajes de debug detallados")
        print("\nüîç DIAGN√ìSTICO MANUAL:")
        print("   ‚Ä¢ Ejecuta: python diagnostico_camaras.py")
        print("   ‚Ä¢ Ejecuta: python rtsp_monitor.py")
        print("\nüìù LOGS MEJORADOS:")
        print("   ‚Ä¢ Informaci√≥n de conexi√≥n RTSP detallada")
        print("   ‚Ä¢ Estado de frames en tiempo real")
        print("   ‚Ä¢ Diagn√≥stico autom√°tico de errores")
        
    else:
        print("\n‚ö†Ô∏è APLICACI√ìN PARCIAL")
        print("Algunos parches no se pudieron aplicar completamente.")
        print("Revisa los errores anteriores y ejecuta manualmente si es necesario.")
    
    return success_count == 2

if __name__ == "__main__":
    try:
        success = main()
        sys.exit(0 if success else 1)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è Cancelado por usuario")
        sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå Error inesperado: {e}")
        sys.exit(1)
